version: '3.8'
services:
  traefik:
    image: traefik:v3.3
    restart: always
    command: --api.insecure=true --providers.docker --log.level=DEBUG
    ports:
      - "8080:80"
      - "8081:8080"
    depends_on:
      - backend
      - frontend
    deploy:
      placement:
        constraints:
          - node.role == manager
    volumes:
      # Add Docker as a mounted volume, so that Traefik can read the labels of other services
      - /var/run/docker.sock:/var/run/docker.sock:ro

  backend:
    image: ghcr.io/eutampieri/ldap-proxy/backend # docker image build -t ldap-proxy-backend .
    restart: always
    environment:
      MONGO_PORT: 27017
      DB_URI: mongodb://mongodb1:27017,mongodb2:27017,mongodb3:27017/ldap-proxy-database?replicaSet=rs0
    depends_on:
      - mongodb1
    deploy:
      replicas: 2
    labels:
     - "traefik.http.services.backend.loadbalancer.server.port=3000"
     - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"  
  frontend:
    image: ghcr.io/eutampieri/ldap-proxy/frontend # docker image build -t ldap-proxy-backend .
    restart: always
    environment:
      MONGO_PORT: 27017
      DB_URI: mongodb://mongodb1:27017,mongodb2:27017,mongodb3:27017/ldap-proxy-database?replicaSet=rs0
    depends_on:
      - mongodb1
    deploy:
      replicas: 2
    labels:
     - "traefik.http.services.frontend.loadbalancer.server.port=80"  
  merger:
    image: ghcr.io/eutampieri/ldap-proxy/merger # docker image build -t ldap-proxy-backend .
    restart: always
    environment:
      DB_URI: mongodb://mongodb1:27017,mongodb2:27017,mongodb3:27017/ldap-proxy-database?replicaSet=rs0
    depends_on:
      - mongodb1
    deploy:
      replicas: 2

  mongodb1:
    image: mongo
    restart: always
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
    volumes:
     - mongodata1:/data/db
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mongodb2:
    image: mongo
    restart: always
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
    volumes:
      - mongodata2:/data/db
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mongodb3:
    image: mongo
    restart: always
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
    volumes:
      - mongodata3:/data/db
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mongoexpress:
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
      ME_CONFIG_MONGODB_URL: mongodb://mongodb1:27017,mongodb2:27017,mongodb3:27017/ldap-proxy-database?replicaSet=rs0
    restart: always
    ports:
      - "8081:8081"
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  mongodata1:
  mongodata2:
  mongodata3: